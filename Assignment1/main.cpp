#include <glad/glad.h>
#include <GLFW/glfw3.h>

#include <glm/glm.hpp>
#include <glm/gtc/matrix_transform.hpp>
#include <glm/gtc/type_ptr.hpp>

#include <iostream>

using namespace std;

void framebuffer_size_callback(GLFWwindow* window, int width, int height);
void processInput(GLFWwindow* window);

// settings
const unsigned int SCR_WIDTH = 800;
const unsigned int SCR_HEIGHT = 600;
float rotateAngle = 0.0;
float translate_X = -0.7;
float translate_Y = -0.5;
float scale_X = 1.5;
float scale_Y = 1.5;

const char* vertexShaderSource = "#version 330 core\n"
"layout (location = 0) in vec3 aPos;\n"
"uniform mat4 transform;\n"
"void main()\n"
"{\n"
"   gl_Position = transform * vec4(aPos, 1.0);\n"
"}\0";
const char* fragmentShaderSource = "#version 330 core\n"
"out vec4 FragColor;\n"
"void main()\n"
"{\n"
"   FragColor = vec4(0.0f, 0.0f, 0.0f, 1.0f);\n"
"}\n\0";
const char* fragmentShaderSource1 = "#version 330 core\n"
"out vec4 FragColor;\n"
"void main()\n"
"{\n"
"   FragColor = vec4(0.33f, 0.19f, 0.09f, 1.0f);\n"
"}\n\0";

int main()
{
    // glfw: initialize and configure
    // ------------------------------
    glfwInit();
    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);
    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);
    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);

#ifdef __APPLE__
    glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);
#endif

    // glfw window creation
    // --------------------
    GLFWwindow* window = glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, "CSE 4208: Computer Graphics Laboratory", NULL, NULL);
    if (window == NULL)
    {
        std::cout << "Failed to create GLFW window" << std::endl;
        glfwTerminate();
        return -1;
    }
    glfwMakeContextCurrent(window);
    glfwSetFramebufferSizeCallback(window, framebuffer_size_callback);

    // glad: load all OpenGL function pointers
    // ---------------------------------------
    if (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress))
    {
        std::cout << "Failed to initialize GLAD" << std::endl;
        return -1;
    }


    // build and compile our shader program
    // ------------------------------------
    // vertex shader
    unsigned int vertexShader = glCreateShader(GL_VERTEX_SHADER);
    glShaderSource(vertexShader, 1, &vertexShaderSource, NULL);
    glCompileShader(vertexShader);
    // check for shader compile errors
    int success;
    char infoLog[512];
    glGetShaderiv(vertexShader, GL_COMPILE_STATUS, &success);
    if (!success)
    {
        glGetShaderInfoLog(vertexShader, 512, NULL, infoLog);
        std::cout << "ERROR::SHADER::VERTEX::COMPILATION_FAILED\n" << infoLog << std::endl;
    }
    // fragment shader
    unsigned int fragmentShader = glCreateShader(GL_FRAGMENT_SHADER);
    glShaderSource(fragmentShader, 1, &fragmentShaderSource, NULL);
    glCompileShader(fragmentShader);
    // check for shader compile errors
    glGetShaderiv(fragmentShader, GL_COMPILE_STATUS, &success);
    if (!success)
    {
        glGetShaderInfoLog(fragmentShader, 512, NULL, infoLog);
        std::cout << "ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\n" << infoLog << std::endl;
    }
    // link shaders
    unsigned int shaderProgram = glCreateProgram();
    glAttachShader(shaderProgram, vertexShader);
    glAttachShader(shaderProgram, fragmentShader);
    glLinkProgram(shaderProgram);
    // check for linking errors
    glGetProgramiv(shaderProgram, GL_LINK_STATUS, &success);
    if (!success) {
        glGetProgramInfoLog(shaderProgram, 512, NULL, infoLog);
        std::cout << "ERROR::SHADER::PROGRAM::LINKING_FAILED\n" << infoLog << std::endl;
    }
    glDeleteShader(vertexShader);
    glDeleteShader(fragmentShader);

    //asdasd
    unsigned int vertexShader1 = glCreateShader(GL_VERTEX_SHADER);
    glShaderSource(vertexShader1, 1, &vertexShaderSource, NULL);
    glCompileShader(vertexShader1);
    // check for shader compile errors
    glGetShaderiv(vertexShader1, GL_COMPILE_STATUS, &success);
    if (!success)
    {
        glGetShaderInfoLog(vertexShader1, 512, NULL, infoLog);
        std::cout << "ERROR::SHADER::VERTEX::COMPILATION_FAILED\n" << infoLog << std::endl;
    }
    // fragment shader
    unsigned int fragmentShader1 = glCreateShader(GL_FRAGMENT_SHADER);
    glShaderSource(fragmentShader1, 1, &fragmentShaderSource1, NULL);
    glCompileShader(fragmentShader1);
    // check for shader compile errors
    glGetShaderiv(fragmentShader1, GL_COMPILE_STATUS, &success);
    if (!success)
    {
        glGetShaderInfoLog(fragmentShader1, 512, NULL, infoLog);
        std::cout << "ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\n" << infoLog << std::endl;
    }
    // link shaders
    unsigned int shaderProgram1 = glCreateProgram();
    glAttachShader(shaderProgram1, vertexShader1);
    glAttachShader(shaderProgram1, fragmentShader1);
    glLinkProgram(shaderProgram1);
    // check for linking errors
    glGetProgramiv(shaderProgram1, GL_LINK_STATUS, &success);
    if (!success) {
        glGetProgramInfoLog(shaderProgram1, 512, NULL, infoLog);
        std::cout << "ERROR::SHADER::PROGRAM::LINKING_FAILED\n" << infoLog << std::endl;
    }
    glDeleteShader(vertexShader1);
    glDeleteShader(fragmentShader1);

    // set up vertex data (and buffer(s)) and configure vertex attributes
    // ------------------------------------------------------------------

    //lines, line_strip, line_loop, triangles, triangle_strip
    /*float vertices[] = {
        -0.75f, 0.5f, 0.0f,
        -0.5f, -0.5f, 0.0f,
        -0.25f, 0.5f, 0.0f,
         0.0f, -0.5f, 0.0f,
         0.25f, 0.5f, 0.0f,
         0.5f, -0.5f, 0.0f
    };*/

    //triangle_fan
    /*float vertices[] = {
        0.0f, 0.0f, 0.0f,
        0.5f, 0.0f, 0.0f,
        0.33f, 0.33f, 0.0f,
         0.0f, 0.5f, 0.0f,
        -0.33f, 0.33f, 0.0f,
        -0.5f, 0.0f, 0.0f
        //-0.33f, -0.33f, 0.0f,
        //0.0f, -0.5f, 0.0f,
       // 0.33f, -0.33f, 0.0f
    };*/

    //triangle
    float vertices2[] = {
        -0.5f, -0.5f, 0.0f, // left
         0.5f, -0.5f, 0.0f, // right
         0.0f,  0.5f, 0.0f  // top
    };
    float vertices[] = {
0.184496124031007,0.595370238265087,0,
0.182945736434108,0.59536786037,0,
0.17984496124031,0.595363104579826,0,
0.175193798449612,0.595355970894564,0,
0.170542635658914,0.593815094878014,0,
0.170542635658914,0.593815094878014,0,
0.164341085271317,0.589204356303799,0,
0.162790697674418,0.589201978408712,0,
0.155038759689922,0.589190088933276,0,
0.155038759689922,0.589190088933276,0,
0.144186046511627,0.586105959005088,0,
0.144186046511627,0.586105959005088,0,
0.127131782945736,0.586079802159128,0,
0.11937984496124,0.586067912683692,0,
0.11937984496124,0.586067912683692,0,
0.108527131782945,0.590652494411946,0,
0.102325581395348,0.593710467494174,0,
0.102325581395348,0.593710467494174,0,
0.0914728682170542,0.593693822228563,0,
0.0914728682170542,0.593693822228563,0,
0.0806201550387596,0.593677176962952,0,
0.0697674418604651,0.593660531697341,0,
0.0666666666666666,0.593655775907167,0,
0.0589147286821705,0.592110144100442,0,
0.0465116279069767,0.58595615161459,0,
0.041860465116279,0.58441527559804,0,
0.041860465116279,0.58441527559804,0,
0.0403100775193798,0.584412897702953,0,
0.027906976744186,0.590528843867408,0,
0.027906976744186,0.593596328529985,0,
0.027906976744186,0.595130070861273,0,
0.0217054263565891,0.601255528606077,0,
0.0217054263565891,0.601255528606077,0,
0.013953488372093,0.607378608455794,0,
0.013953488372093,0.610446093118371,0,
0.00930232558139534,0.613506444095686,0,
0.00775193798449612,0.618105293194464,0,
0.00465116279069767,0.622701764398154,0,
0.00310077519379844,0.625766871165644,0,
0.00310077519379844,0.630368098159509,0,
0.00310077519379844,0.634969325153374,0,
0.00310077519379844,0.634969325153374,0,
0.00310077519379844,0.641104294478527,0,
0.00620155038759689,0.645710277262567,0,
0.00930232558139534,0.64724877538403,0,
0.0186046511627906,0.651864269748418,0,
0.0217054263565891,0.653402767869881,0,
0.0248062015503875,0.656475008322632,0,
0.027906976744186,0.66261473343796,0,
0.0294573643410852,0.667218338326913,0,
0.0310077519379844,0.668754458553288,0,
0.0341085271317829,0.671826699006039,0,
0.0403100775193798,0.673369952917677,0,
0.0403100775193798,0.673369952917677,0,
0.0434108527131782,0.677975935701716,0,
0.0465116279069767,0.681048176154468,0,
0.0480620155038759,0.684118038712132,0,
0.0527131782945736,0.688726399391258,0,
0.0542635658914728,0.691796261948922,0,
0.0589147286821705,0.694870880296761,0,
0.0604651162790697,0.697940742854425,0,
0.0697674418604651,0.707157464212679,0,
0.0713178294573643,0.710227326770343,0,
0.0713178294573643,0.716362296095496,0,
0.0728682170542635,0.720965900984448,0,
0.0744186046511627,0.727103248204689,0,
0.0790697674418604,0.733245351215104,0,
0.0837209302325581,0.736319969562943,0,
0.0852713178294573,0.742457316783183,0,
0.0883720930232558,0.743995814904646,0,
0.0930232558139534,0.750137917915061,0,
0.0945736434108527,0.750140295810148,0,
0.0961240310077519,0.754743900699101,0,
0.0961240310077519,0.756277643030389,0,
0.0976744186046511,0.757813763256765,0,
0.0992248062015503,0.760883625814429,0,
0.102325581395348,0.768557093261045,0,
0.102325581395348,0.771624577923622,0,
0.0992248062015503,0.773153564464735,0,
0.0961240310077519,0.777750035668426,0,
0.0945736434108527,0.779281400104627,0,
0.0930232558139534,0.785413991534693,0,
0.0930232558139534,0.786947733865981,0,
0.0930232558139534,0.790015218528558,0,
0.0930232558139534,0.793082703191135,0,
0.0930232558139534,0.796150187853711,0,
0.0914728682170542,0.799215294621201,0,
0.0914728682170542,0.803816521615066,0,
0.0914728682170542,0.803816521615066,0,
0.0961240310077519,0.805357397631616,0,
0.0961240310077519,0.805357397631616,0,
0.0976744186046511,0.803826033195415,0,
0.0976744186046511,0.800758548532838,0,
0.0992248062015503,0.797693441765349,0,
0.0992248062015503,0.797693441765349,0,
0.100775193798449,0.797695819660436,0,
0.105426356589147,0.791567984020545,0,
0.110077519379844,0.78850763304323,0,
0.116279069767441,0.785449659961002,0,
0.120930232558139,0.785456793646264,0,
0.122480620155038,0.785459171541351,0,
0.133333333333333,0.785475816806962,0,
0.133333333333333,0.785475816806962,0,
0.141085271317829,0.785487706282398,0,
0.145736434108527,0.78549483996766,0,
0.151937984496124,0.780903124554144,0,
0.150387596899224,0.788569458315499,0,
0.145736434108527,0.796231036286679,0,
0.142635658914728,0.799293765159081,0,
0.13953488372093,0.810025205687925,0,
0.13953488372093,0.813092690350501,0,
0.13953488372093,0.817693917344366,0,
0.13953488372093,0.817693917344366,0,
0.142635658914728,0.814631188471964,0,
0.147286821705426,0.810037095163361,0,
0.15813953488372,0.808519998097684,0,
0.164341085271317,0.806995767346744,0,
0.176744186046511,0.799346078851001,0,
0.17829457364341,0.7978147144148,0,
0.17984496124031,0.793215865316022,0,
0.17984496124031,0.793215865316022,0,
0.181395348837209,0.788617016217244,0,
0.181395348837209,0.785549531554667,0,
0.182945736434108,0.782484424787178,0,
0.182945736434108,0.779416940124601,0,
0.181395348837209,0.773279592904361,0,
0.172093023255813,0.767130356208684,0,
0.170542635658914,0.762526751319731,0,
0.167441860465116,0.75945451086698,0,
0.167441860465116,0.757920768535692,0,
0.176744186046511,0.76253626290008,0,
0.17984496124031,0.765608503352832,0,
0.201550387596899,0.773310505540495,0,
0.212403100775193,0.774860893137394,0,
0.21860465116279,0.779471631711608,0,
0.224806201550387,0.779481143291958,0,
0.23875968992248,0.779502544347743,0,
0.244961240310077,0.779512055928092,0,
0.246511627906976,0.779514433823179,0,
0.252713178294573,0.770321491415798,0,
0.251162790697674,0.764184144195558,0,
0.23875968992248,0.758030151709706,0,
0.232558139534883,0.75495315546678,0,
0.223255813953488,0.748803918771103,0,
0.220155038759689,0.747265420649641,0,
0.210852713178294,0.741116183953964,0,
0.206201550387596,0.736507823274837,0,
0.220155038759689,0.736529224330622,0,
0.226356589147286,0.736538735910971,0,
0.232558139534883,0.735014505160032,0,
0.23875968992248,0.730422789746516,0,
0.23875968992248,0.730422789746516,0,
0.240310077519379,0.730425167641603,0,
0.25891472868217,0.72125124839492,0,
0.260465116279069,0.721253626290008,0,
0.268217054263565,0.721265515765444,0,
0.277519379844961,0.721279783135968,0,
0.282170542635658,0.722820659152518,0,
0.291472868217054,0.72436866885433,0,
0.303875968992248,0.730522661340181,0,
0.311627906976744,0.730534550815618,0,
0.324031007751937,0.732087316307604,0,
0.333333333333333,0.735169068340704,0,
0.356589147286821,0.739805963760878,0,
0.35968992248062,0.739810719551053,0,
0.368992248062015,0.739824986921577,0,
0.390697674418604,0.739858277452798,0,
0.3984496124031,0.739870166928235,0,
0.3984496124031,0.739870166928235,0,
0.41860465116279,0.739901079564369,0,
0.440310077519379,0.736866885433014,0,
0.449612403100775,0.735347410472249,0,
0.455813953488372,0.732289437390022,0,
0.474418604651162,0.730784229799781,0,
0.488372093023255,0.729271888524278,0,
0.500775193798449,0.724689684691111,0,
0.508527131782945,0.724701574166547,0,
0.533333333333333,0.720138393494079,0,
0.544186046511627,0.718621296428401,0,
0.556589147286821,0.718640319589099,0,
0.57984496124031,0.718675988015408,0,
0.586046511627906,0.720219241927046,0,
0.607751937984496,0.723320017120844,0,
0.61860465116279,0.731005374042897,0,
0.61860465116279,0.731005374042897,0,
0.640310077519379,0.737173633899272,0,
0.641860465116279,0.737176011794359,0,
0.641860465116279,0.737176011794359,0,
0.646511627906976,0.738716887810909,0,
0.662015503875969,0.743341893755647,0,
0.666666666666666,0.744882769772197,0,
0.666666666666666,0.744882769772197,0,
0.674418604651162,0.746428401578922,0,
0.685271317829457,0.747978789175821,0,
0.688372093023255,0.747983544965996,0,
0.710077519379844,0.749550577828506,0,
0.711627906976744,0.749552955723593,0,
0.711627906976744,0.749552955723593,0,
0.720930232558139,0.751100965425405,0,
0.724031007751937,0.752639463546868,0,
0.745736434108527,0.755740238740666,0,
0.753488372093023,0.755752128216103,0,
0.75968992248062,0.755761639796452,0,
0.773643410852713,0.754249298520949,0,
0.77984496124031,0.75272506777001,0,
0.792248062015503,0.752744090930708,0,
0.806201550387596,0.751231749655205,0,
0.815503875968992,0.74971227469444,0,
0.815503875968992,0.74971227469444,0,
0.817054263565891,0.749714652589527,0,
0.834108527131782,0.743605840110334,0,
0.83875968992248,0.743612973795596,0,
0.840310077519379,0.743615351690683,0,
0.843410852713178,0.743620107480857,0,
0.851162790697674,0.743631996956294,0,
0.865116279069767,0.739052171018214,0,
0.871317829457364,0.735994197935987,0,
0.87906976744186,0.732938602748846,0,
0.883720930232558,0.73141199410282,0,
0.896124031007751,0.725296047938365,0,
0.89922480620155,0.722233319065962,0,
0.902325581395348,0.717636847862272,0,
0.906976744186046,0.713042754553669,0,
0.906976744186046,0.713042754553669,0,
0.905426356589147,0.717641603652446,0,
0.905426356589147,0.720709088315023,0,
0.908527131782945,0.723781328767774,0,
0.917829457364341,0.723795596138298,0,
0.924031007751938,0.72073762305607,0,
0.931782945736434,0.71768202786893,0,
0.934883720930232,0.716153041327816,0,
0.934883720930232,0.716153041327816,0,
0.941085271317829,0.714628810576877,0,
0.950387596899224,0.708508108622247,0,
0.956589147286821,0.70545013554002,0,
0.962790697674418,0.699324677795215,0,
0.968992248062015,0.693199220050411,0,
0.968992248062015,0.690131735387834,0,
0.970542635658914,0.687066628620345,0,
0.976744186046511,0.676339943881676,0,
0.97829457364341,0.671741094782898,0,
0.981395348837209,0.664077138916631,0,
0.981395348837209,0.657942169591477,0,
0.981395348837209,0.639537261616017,0,
0.981395348837209,0.633402292290864,0,
0.982945736434108,0.627269700860798,0,
0.982945736434108,0.621134731535644,0,
0.982945736434108,0.614999762210491,0,
0.981395348837209,0.604261187996385,0,
0.981395348837209,0.59965996100252,0,
0.981395348837209,0.588923764683502,0,
0.97984496124031,0.582786417463261,0,
0.97984496124031,0.573583963475531,0,
0.97984496124031,0.570516478812954,0,
0.976744186046511,0.555174299709896,0,
0.976744186046511,0.55210681504732,0,
0.976744186046511,0.549039330384743,0,
0.976744186046511,0.541370618728301,0,
0.976744186046511,0.529100680077994,0,
0.976744186046511,0.524499453084129,0,
0.976744186046511,0.518364483758976,0,
0.976744186046511,0.509162029771246,0,
0.975193798449612,0.504558424882294,0,
0.975193798449612,0.49842345555714,0,
0.975193798449612,0.493822228563275,0,
0.975193798449612,0.486153516906834,0,
0.975193798449612,0.481552289912969,0,
0.973643410852713,0.467746231036286,0,
0.973643410852713,0.461611261711133,0,
0.973643410852713,0.45547629238598,0,
0.97829457364341,0.4478147144148,0,
0.97984496124031,0.44474960764731,0,
0.982945736434108,0.432484424787178,0,
0.986046511627906,0.430955438246064,0,
0.987596899224806,0.429424073809863,0,
0.987596899224806,0.429424073809863,0,
0.992248062015503,0.423296238169971,0,
0.995348837209302,0.418699766966281,0,
0.995348837209302,0.418699766966281,0,
1.00155038759689,0.412574309221477,0,
1.00465116279069,0.40491035335521,0,
1.00465116279069,0.400309126361345,0,
1.00465116279069,0.391106672373614,0,
1.00465116279069,0.381904218385884,0,
1.00465116279069,0.374235506729443,0,
1.00310077519379,0.366564417177914,0,
1.00310077519379,0.361963190184049,0,
1.00155038759689,0.360427069957673,0,
0.995348837209302,0.369620012365054,0,
0.992248062015503,0.374216483568744,0,
0.989147286821705,0.375745470109858,0,
0.982945736434108,0.381870927854663,0,
0.970542635658914,0.384919389356541,0,
0.961240310077519,0.387972606648594,0,
0.955038759689922,0.387963095068245,0,
0.951937984496124,0.397160793265801,0,
0.951937984496124,0.404829504922242,0,
0.951937984496124,0.412498216578684,0,
0.951937984496124,0.417099443572549,0,
0.953488372093023,0.430905502449232,0,
0.953488372093023,0.437040471774385,0,
0.953488372093023,0.447776668093403,0,
0.955038759689922,0.456981499976221,0,
0.955038759689922,0.461582726970086,0,
0.955038759689922,0.473852665620392,0,
0.955038759689922,0.479987634945546,0,
0.951937984496124,0.49071907547439,0,
0.951937984496124,0.498387787130831,0,
0.951937984496124,0.502989014124696,0,
0.955038759689922,0.510662481571313,0,
0.956589147286821,0.51986731345413,0,
0.958139534883721,0.519869691349217,0,
0.958139534883721,0.519869691349217,0,
0.956589147286821,0.527536025110572,0,
0.955038759689922,0.538269843534503,0,
0.953488372093023,0.545936177295857,0,
0.955038759689922,0.547472297522233,0,
0.955038759689922,0.552073524516098,0,
0.955038759689922,0.55974223617254,0,
0.958139534883721,0.572016930613021,0,
0.958139534883721,0.576618157606886,0,
0.958139534883721,0.587354353925904,0,
0.958139534883721,0.598090550244923,0,
0.958139534883721,0.604225519570076,0,
0.958139534883721,0.614961715889095,0,
0.958139534883721,0.624164169876825,0,
0.958139534883721,0.636434108527131,0,
0.958139534883721,0.639501593189708,0,
0.955038759689922,0.650233033718552,0,
0.955038759689922,0.65176677604984,0,
0.951937984496124,0.656363247253531,0,
0.950387596899224,0.660962096352309,0,
0.947286821705426,0.664024825224711,0,
0.941085271317829,0.667082798306938,0,
0.936434108527131,0.668609406952965,0,
0.931782945736434,0.668602273267703,0,
0.924031007751938,0.670124126123555,0,
0.924031007751938,0.670124126123555,0,
0.928682170542635,0.663996290483663,0,
0.931782945736434,0.657866076948685,0,
0.933333333333333,0.656334712512484,0,
0.936434108527131,0.650204498977505,0,
0.936434108527131,0.642535787321063,0,
0.936434108527131,0.63640081799591,0,
0.936434108527131,0.631799591002045,0,
0.936434108527131,0.621063394683026,0,
0.936434108527131,0.614928425357873,0,
0.936434108527131,0.608793456032719,0,
0.936434108527131,0.604192229038854,0,
0.936434108527131,0.587321063394683,0,
0.934883720930232,0.581183716174442,0,
0.930232558139534,0.567372901507585,0,
0.927131782945736,0.565834403386122,0,
0.925581395348837,0.559697056165882,0,
0.920930232558139,0.542818756836448,0,
0.917829457364341,0.53667903172112,0,
0.913178294573643,0.519800732391686,0,
0.910077519379844,0.51212726494507,0,
0.908527131782945,0.502922433062253,0,
0.905426356589147,0.493715223284348,0,
0.905426356589147,0.49218148095306,0,
0.905426356589147,0.476844057640177,0,
0.905426356589147,0.469175345983735,0,
0.905426356589147,0.461506634327293,0,
0.910077519379844,0.453845056356113,0,
0.914728682170542,0.450784705378798,0,
0.914728682170542,0.444649736053645,0,
0.916279069767441,0.43698340229229,0,
0.91937984496124,0.430853188757312,0,
0.920930232558139,0.424720597327246,0,
0.922480620155038,0.420121748228468,0,
0.927131782945736,0.413993912588576,0,
0.927131782945736,0.409392685594711,0,
0.930232558139534,0.404796214391021,0,
0.933333333333333,0.392531031530888,0,
0.934883720930232,0.384864697769534,0,
0.934883720930232,0.378729728444381,0,
0.933333333333333,0.371058638892852,0,
0.933333333333333,0.366457411898986,0,
0.931782945736434,0.357252580016169,0,
0.930232558139534,0.351115232795929,0,
0.927131782945736,0.332705569030294,0,
0.927131782945736,0.323503115042564,0,
0.927131782945736,0.315834403386122,0,
0.925581395348837,0.306629571503305,0,
0.925581395348837,0.294359632852998,0,
0.925581395348837,0.289758405859133,0,
0.924031007751938,0.280553573976316,0,
0.922480620155038,0.266747515099633,0,
0.922480620155038,0.26061254577448,0,
0.924031007751938,0.252946212013125,0,
0.925581395348837,0.236077424264041,0,
0.925581395348837,0.234543681932753,0,
0.908527131782945,0.214578874780044,0,
0.910077519379844,0.209980025681267,0,
0.911627906976744,0.208448661245066,0,
0.914728682170542,0.200784705378798,0,
0.908527131782945,0.196173966804584,0,
0.894573643410852,0.196152565748799,0,
0.885271317829457,0.194604556046987,0,
0.877519379844961,0.19459266657155,0,
0.868217054263565,0.199179626194892,0,
0.865116279069767,0.203776097398582,0,
0.85891472868217,0.208367812812098,0,
0.863565891472868,0.216043658153802,0,
0.871317829457364,0.225258001616968,0,
0.877519379844961,0.232936224853759,0,
0.883720930232558,0.24061444809055,0,
0.889922480620154,0.249826413658629,0,
0.889922480620154,0.259028867646359,0,
0.889922480620154,0.271298806296666,0,
0.889922480620154,0.283568744946973,0,
0.886821705426356,0.29123270081324,0,
0.885271317829457,0.295831549912017,0,
0.883720930232558,0.303497883673372,0,
0.883720930232558,0.308099110667237,0,
0.888372093023255,0.320376183002805,0,
0.889922480620154,0.331114757216911,0,
0.891472868217054,0.334184619774575,0,
0.894573643410852,0.346459314215056,0,
0.896124031007751,0.357197888429162,0,
0.897674418604651,0.364868977980691,0,
0.902325581395348,0.389415988966566,0,
0.902325581395348,0.390949731297855,0,
0.893023255813953,0.418542825890521,0,
0.891472868217054,0.421607932658011,0,
0.889922480620154,0.436942978075807,0,
0.888372093023255,0.44614305416845,0,
0.886821705426356,0.456876872592381,0,
0.886821705426356,0.463011841917534,0,
0.889922480620154,0.472219051695439,0,
0.894573643410852,0.479894897037142,0,
0.897674418604651,0.4952370761402,0,
0.89922480620155,0.510576877348171,0,
0.902325581395348,0.516716602463499,0,
0.903875968992248,0.515185238027298,0,
0.897674418604651,0.499838303134065,0,
0.893023255813953,0.487561230798497,0,
0.891472868217054,0.473755171921814,0,
0.889922480620154,0.463016597707709,0,
0.893023255813953,0.436947733865981,0,
0.894573643410852,0.430815142435915,0,
0.896124031007751,0.423148808674561,0,
0.896124031007751,0.410878870024254,0,
0.89922480620155,0.40014742949541,0,
0.902325581395348,0.390949731297855,0,
0.902325581395348,0.38634850430399,0,
0.902325581395348,0.375612307984971,0,
0.902325581395348,0.366409853997241,0,
0.89922480620155,0.357202644219337,0,
0.893023255813953,0.346456936319969,0,
0.889922480620154,0.344918438198506,0,
0.886821705426356,0.335711228420602,0,
0.885271317829457,0.332641365862938,0,
0.880620155038759,0.320364293527369,0,
0.875968992248061,0.308087221191801,0,
0.871317829457364,0.295810148856232,0,
0.871317829457364,0.295810148856232,0,
0.868217054263565,0.288136681409616,0,
0.865116279069767,0.278929471631711,0,
0.863565891472868,0.265123412755029,0,
0.860465116279069,0.258983687639701,0,
0.85891472868217,0.25284634041946,0,
0.857364341085271,0.243641508536643,0,
0.852713178294573,0.234431920863651,0,
0.852713178294573,0.228296951538498,0,
0.851162790697674,0.226760831312122,0,
0.848062015503875,0.222154848528082,0,
0.846511627906976,0.205281304988823,0,
0.846511627906976,0.203747562657535,0,
0.840310077519379,0.197603081752033,0,
0.832558139534883,0.196057449945308,0,
0.810852713178294,0.197557901745374,0,
0.807751937984496,0.1975531459552,0,
0.803100775193798,0.199079754601227,0,
0.795348837209302,0.203669092119655,0,
0.792248062015503,0.208265563323346,0,
0.793798449612403,0.22053787986874,0,
0.806201550387596,0.226691872354591,0,
0.809302325581395,0.231297855138631,0,
0.817054263565891,0.240512198601797,0,
0.81860465116279,0.249717030484615,0,
0.81860465116279,0.251250772815903,0,
0.820155038759689,0.252786893042278,0,
0.826356589147286,0.265066343272934,0,
0.826356589147286,0.271201312598088,0,
0.827906976744186,0.283473629143482,0,
0.829457364341085,0.291144718695011,0,
0.831007751937984,0.301883292909116,0,
0.831007751937984,0.304950777571693,0,
0.834108527131782,0.320292956674751,0,
0.835658914728682,0.326430303894992,0,
0.837209302325581,0.335635135777809,0,
0.837209302325581,0.343303847434251,0,
0.83875968992248,0.355576163979645,0,
0.83875968992248,0.36017739097351,0,
0.83875968992248,0.370913587292528,0,
0.834108527131782,0.384710134588861,0,
0.834108527131782,0.398513815570457,0,
0.834108527131782,0.407716269558187,0,
0.831007751937984,0.426116421743472,0,
0.821705426356589,0.436838350691967,0,
0.81860465116279,0.439901079564369,0,
0.812403100775193,0.44909402197175,0,
0.804651162790697,0.459818328815332,0,
0.799999999999999,0.465946164455224,0,
0.796899224806201,0.467475150996338,0,
0.787596899224806,0.475129595282256,0,
0.784496124031007,0.47665858182337,0,
0.773643410852713,0.4843106482142,0,
0.768992248062015,0.485837256860227,0,
0.756589147286821,0.490419460693394,0,
0.747286821705426,0.495006420316735,0,
0.736434108527131,0.496523517382413,0,
0.724031007751937,0.499571978884291,0,
0.722480620155038,0.499569600989204,0,
0.713178294573643,0.49955533361868,0,
0.713178294573643,0.49955533361868,0,
0.722480620155038,0.501103343320492,0,
0.734883720930232,0.50112236648119,0,
0.747286821705426,0.496540162648023,0,
0.753488372093023,0.491948447234508,0,
0.775193798449612,0.479711799115423,0,
0.77829457364341,0.475115327911732,0,
0.784496124031007,0.473591097160793,0,
0.804651162790697,0.458284586484044,0,
0.809302325581395,0.449089266181576,0,
0.810852713178294,0.446024159414086,0,
0.815503875968992,0.438362581442906,0,
0.820155038759689,0.429167261140438,0,
0.821705426356589,0.419967185047795,0,
0.824806201550387,0.41076948685024,0,
0.827906976744186,0.401571788652684,0,
0.831007751937984,0.378570409473534,0,
0.831007751937984,0.375502924810957,0,
0.826356589147286,0.375495791125695,0,
0.820155038759689,0.375486279545346,0,
0.813953488372093,0.37240928330242,0,
0.810852713178294,0.367803300518381,0,
0.807751937984496,0.357062348409188,0,
0.803100775193798,0.350920245398773,0,
0.803100775193798,0.350920245398773,0,
0.796899224806201,0.350910733818423,0,
0.790697674418604,0.350901222238074,0,
0.784496124031007,0.35549293765159,0,
0.784496124031007,0.369296618633185,0,
0.784496124031007,0.378499072620916,0,
0.782945736434108,0.380030437057117,0,
0.77984496124031,0.38155942359823,0,
0.773643410852713,0.38308365434917,0,
0.772093023255814,0.383081276454082,0,
0.764341085271317,0.375400675322204,0,
0.762790697674418,0.369263328101964,0,
0.762790697674418,0.364662101108099,0,
0.75968992248062,0.356988633661482,0,
0.741085271317829,0.358493841251724,0,
0.734883720930232,0.36308555666524,0,
0.734883720930232,0.366153041327816,0,
0.734883720930232,0.3814904646407,0,
0.734883720930232,0.387625433965853,0,
0.720930232558139,0.398340229229086,0,
0.714728682170542,0.405999429305179,0,
0.706976744186046,0.415189993817472,0,
0.705426356589147,0.424390069910115,0,
0.716279069767441,0.442811623151186,0,
0.717829457364341,0.447415228040138,0,
0.720930232558139,0.452021210824178,0,
0.727131782945736,0.455098207067104,0,
0.728682170542635,0.458168069624768,0,
0.716279069767441,0.438210396157321,0,
0.710077519379844,0.432065915251819,0,
0.697674418604651,0.424378180434679,0,
0.691472868217054,0.418233699529176,0,
0.677519379844961,0.416678556142103,0,
0.669767441860465,0.415132924335378,0,
0.660465116279069,0.410517429970989,0,
0.635658914728682,0.40434441432444,0,
0.632558139534883,0.401272173871688,0,
0.629457364341085,0.401267418081514,0,
0.617054263565891,0.398180910258239,0,
0.603100775193798,0.396625766871165,0,
0.593798449612403,0.396611499500642,0,
0.590697674418604,0.396606743710467,0,
0.586046511627906,0.396599610025205,0,
0.570542635658914,0.396575831074333,0,
0.556589147286821,0.396554430018547,0,
0.548837209302325,0.396542540543111,0,
0.544186046511627,0.396535406857849,0,
0.541085271317829,0.396530651067674,0,
0.536434108527131,0.396523517382413,0,
0.524031007751938,0.396504494221714,0,
0.524031007751938,0.396504494221714,0,
0.517829457364341,0.398028724972654,0,
0.496124031007751,0.397995434441432,0,
0.496124031007751,0.397995434441432,0,
0.486821705426356,0.397981167070908,0,
0.47906976744186,0.397969277595472,0,
0.462015503875969,0.397943120749512,0,
0.455813953488372,0.396399866837875,0,
0.446511627906976,0.394851857136063,0,
0.443410852713178,0.3933133590146,0,
0.434108527131782,0.391765349312788,0,
0.424806201550387,0.387149854948399,0,
0.421705426356589,0.387145099158225,0,
0.417054263565891,0.387137965472963,0,
0.417054263565891,0.387137965472963,0,
0.412403100775193,0.387130831787701,0,
0.412403100775193,0.387130831787701,0,
0.4,0.387111808627003,0,
0.393798449612403,0.387102297046654,0,
0.392248062015503,0.382498692157702,0,
0.384496124031007,0.380953060350977,0,
0.37984496124031,0.379412184334427,0,
0.4,0.387111808627003,0,
0.406201550387596,0.387121320207352,0,
0.413953488372093,0.380998240357635,0,
0.413953488372093,0.374863271032482,0,
0.412403100775193,0.365658439149664,0,
0.412403100775193,0.356455985161934,0,
0.412403100775193,0.344186046511628,0,
0.412403100775193,0.338051077186474,0,
0.412403100775193,0.328848623198744,0,
0.415503875968992,0.3181171826699,0,
0.415503875968992,0.311982213344747,0,
0.415503875968992,0.305847244019593,0,
0.415503875968992,0.292043563037998,0,
0.415503875968992,0.288976078375422,0,
0.413953488372093,0.281304988823893,0,
0.413953488372093,0.270568792504874,0,
0.413953488372093,0.269035050173586,0,
0.413953488372093,0.258298853854567,0,
0.415503875968992,0.252166262424501,0,
0.41860465116279,0.246036048889523,0,
0.41860465116279,0.242968564226946,0,
0.41860465116279,0.238367337233081,0,
0.41860465116279,0.233766110239216,0,
0.420155038759689,0.230701003471726,0,
0.420155038759689,0.22763351880915,0,
0.41860465116279,0.221496171588909,0,
0.417054263565891,0.21382508203738,0,
0.417054263565891,0.212291339706092,0,
0.41860465116279,0.209226232938602,0,
0.41860465116279,0.203091263613449,0,
0.423255813953488,0.195429685642269,0,
0.424806201550387,0.19236457887478,0,
0.41860465116279,0.187753840300566,0,
0.417054263565891,0.18621772007419,0,
0.4,0.184657820896942,0,
0.395348837209302,0.18465068721168,0,
0.387596899224806,0.184638797736243,0,
0.382945736434108,0.184631664050982,0,
0.375193798449612,0.186153516906834,0,
0.368992248062015,0.19074523232035,0,
0.372093023255813,0.198418699766966,0,
0.375193798449612,0.209159651876159,0,
0.37829457364341,0.224501830979217,0,
0.37984496124031,0.227571693536881,0,
0.381395348837209,0.245978979407428,0,
0.381395348837209,0.245978979407428,0,
0.381395348837209,0.25364769106387,0,
0.37984496124031,0.265915251819089,0,
0.37829457364341,0.273581585580444,0,
0.373643410852713,0.287378132876777,0,
0.373643410852713,0.288911875208065,0,
0.373643410852713,0.298114329195795,0,
0.372093023255813,0.30578066295715,0,
0.372093023255813,0.32418557093261,0,
0.373643410852713,0.325721691158986,0,
0.375193798449612,0.336460265373091,0,
0.37829457364341,0.344133732819708,0,
0.37829457364341,0.345667475150996,0,
0.37829457364341,0.356403671470014,0,
0.37829457364341,0.373274837114186,0,
0.37829457364341,0.374808579445474,0,
0.381395348837209,0.385549531554667,0,
0.387596899224806,0.399362724116612,0,
0.387596899224806,0.4008964664479,0,
0.389147286821705,0.403966329005564,0,
0.393798449612403,0.414709659009844,0,
0.4,0.433124078565653,0,
0.403100775193798,0.442331288343558,0,
0.4,0.428522851571788,0,
0.389147286821705,0.408567555999429,0,
0.384496124031007,0.393222999001284,0,
0.37829457364341,0.368673610120321,0,
0.375193798449612,0.354865173348551,0,
0.375193798449612,0.342595234698245,0,
0.372093023255813,0.319584343938745,0,
0.372093023255813,0.31498311694488,0,
0.368992248062015,0.311910876492129,0,
0.364341085271317,0.301167546487848,0,
0.362790697674418,0.29349645693632,0,
0.362790697674418,0.287361487611166,0,
0.361240310077519,0.27662291339706,0,
0.356589147286821,0.261278356398915,0,
0.356589147286821,0.255143387073762,0,
0.355038759689922,0.245938555190945,0,
0.355038759689922,0.238269843534503,0,
0.355038759689922,0.235202358871926,0,
0.353488372093023,0.227531269320397,0,
0.353488372093023,0.22446378465782,0,
0.350387596899224,0.219857801873781,0,
0.347286821705426,0.215251819089741,0,
0.347286821705426,0.210650592095876,0,
0.344186046511627,0.207578351643125,0,
0.344186046511627,0.20297712464926,0,
0.344186046511627,0.192240928330242,0,
0.344186046511627,0.190707185998953,0,
0.33953488372093,0.186098825319826,0,
0.331782945736434,0.184553193513102,0,
0.325581395348837,0.183009939601464,0,
0.313178294573643,0.17992343177819,0,
0.303875968992248,0.179909164407666,0,
0.302325581395348,0.179906786512579,0,
0.296124031007752,0.184498501926095,0,
0.294573643410852,0.195232320350026,0,
0.300775193798449,0.20904551291197,0,
0.303875968992248,0.219786465021163,0,
0.308527131782945,0.232063537356731,0,
0.311627906976744,0.241270747134636,0,
0.313178294573643,0.252009321348742,0,
0.313178294573643,0.264279259999049,0,
0.314728682170542,0.276551576544442,0,
0.317829457364341,0.288826270984924,0,
0.31937984496124,0.298031102867741,0,
0.31937984496124,0.314902268511913,0,
0.316279069767441,0.325633709040757,0,
0.316279069767441,0.330234936034622,0,
0.313178294573643,0.344033861226042,0,
0.310077519379844,0.359366528748751,0,
0.306976744186046,0.367030484615018,0,
0.306976744186046,0.377766680934037,0,
0.302325581395348,0.396164455224235,0,
0.300775193798449,0.397695819660436,0,
0.300775193798449,0.399229561991725,0,
0.293023255813953,0.423757549816902,0,
0.293023255813953,0.42529129214819,0,
0.291472868217054,0.425288914253103,0,
0.289922480620155,0.439090217339611,0,
0.285271317829457,0.44675179531079,0,
0.285271317829457,0.448285537642079,0,
0.286821705426356,0.432950492224283,0,
0.286821705426356,0.426815522899129,0,
0.288372093023255,0.409946735150045,0,
0.294573643410852,0.393085081086222,0,
0.294573643410852,0.383882627098492,0,
0.296124031007752,0.376216293337138,0,
0.272868217054263,0.380781851904694,0,
0.272868217054263,0.386916821229847,0,
0.263565891472868,0.396105007847053,0,
0.251162790697674,0.402220954011509,0,
0.244961240310077,0.405278927093736,0,
0.227906976744186,0.417522708898083,0,
0.226356589147286,0.420587815665572,0,
0.224806201550387,0.423652922433062,0,
0.21860465116279,0.429778380177866,0,
0.217054263565891,0.435910971607932,0,
0.215503875968992,0.438976078375422,0,
0.213953488372093,0.442041185142911,0,
0.210852713178294,0.452772625671755,0,
0.207751937984496,0.458902839206734,0,
0.206201550387596,0.463501688305511,0,
0.204651162790697,0.472701764398154,0,
0.201550387596899,0.478831977933133,0,
0.201550387596899,0.489568174252152,0,
0.201550387596899,0.49110191658344,0,
0.201550387596899,0.49110191658344,0,
0.195348837209302,0.498761116659533,0,
0.195348837209302,0.506429828315974,0,
0.195348837209302,0.514098539972416,0,
0.192248062015503,0.526363722832548,0,
0.189147286821705,0.532493936367527,0,
0.189147286821705,0.540162648023969,0,
0.182945736434108,0.547821848100061,0,
0.176744186046511,0.552413563513577,0,
0.175193798449612,0.558546154943643,0,
0.170542635658914,0.564673990583535,0,
0.164341085271317,0.569265705997051,0,
0.164341085271317,0.570799448328339,0,
0.164341085271317,0.572333190659628,0,
0.162790697674418,0.57233081276454,0,
0.155038759689922,0.578453892614258,0,
0.147286821705426,0.583043230132686,0,
0.142635658914728,0.586103581110001,0,
0.134883720930232,0.589159176297141,0


    };
    float spot1[] = {
0.730232558139534,0.643753269605745,0,
0.669767441860465,0.646728016359918,0,
0.65891472868217,0.62523897845627,0,
0.652713178294573,0.599155847244019,0,
0.651162790697674,0.576147334379607,0,
0.649612403100775,0.562341275502924,0,
0.651162790697674,0.553141199410282,0,
0.669767441860465,0.54243353783231,0,
0.697674418604651,0.542476339943881,0,
0.731782945736434,0.542528653635801,0,
0.762790697674418,0.536441242212393,0,
0.782945736434108,0.538005897179816,0,
0.801550387596899,0.544169401246017,0,
0.815503875968992,0.559528225614686,0,
0.824806201550387,0.571812431635516,0,
0.846511627906976,0.573379464498026,0,
0.865116279069767,0.602549103533552,0,
0.871317829457364,0.639368431064821,0,
0.866666666666666,0.663901174680173,0,
0.857364341085271,0.680758072953821,0,
0.832558139534883,0.696057449945308,0,
0.801550387596899,0.703678603700004,0,
0.775193798449612,0.711306891139962,0,
0.75968992248062,0.717418081514243,0,
0.722480620155038,0.729630950682456,0,
0.702325581395348,0.728066295715033,0,
0.691472868217054,0.708111000142673,0,
0.683720930232558,0.689694202691777,0,
0.67906976744186,0.671282161031055,0,
0.674418604651162,0.659005088695486,0,
0.669767441860465,0.645194274028629,0,
0.663565891472868,0.631381081466685,0


    };
    float eye[] = {
0.13488372093023254, 0.7164597897940743,0,
0.11472868217054263, 0.6995577115137681,0,
0.11627906976744186, 0.7118300280591621,0,
0.11937984496124031, 0.7241047224996433,0,
0.1255813953488372, 0.7302492034051458,0,
0.13798449612403102, 0.7364031958909973,0,
0.15193798449612403, 0.7364245969467828,0,
0.15503875968992248, 0.7318281257430923,0,
0.1565891472868217, 0.7241617919817378,0,
0.1565891472868217, 0.7195605649878728,0,
0.15193798449612403, 0.7134184619774576,0,
0.13953488372093023, 0.7041969848290295,0,
0.13333333333333333, 0.7011199885861037,0,
0.1255813953488372, 0.6995743567793788,0

    };
    float spot2[] = {
0.145736434108527,0.701139011746801,0,
0.201550387596899,0.734966947258286,0,
0.221705426356589,0.756470252532458,0,
0.232558139534883,0.774891805773529,0,
0.220155038759689,0.773339040281542,0,
0.201550387596899,0.765641793884053,0,
0.187596899224806,0.75488419650925,0,
0.176744186046511,0.748732581918485,0,
0.170542635658914,0.748723070338136,0,
0.168992248062015,0.748720692443049,0,
0.15968992248062,0.748706425072525,0,
0.147286821705426,0.748687401911827,0,
0.131782945736434,0.748663622960955,0,
0.11937984496124,0.74557711513768,0,
0.108527131782945,0.736358015884339,0,
0.102325581395348,0.72714605031626,0,
0.0976744186046511,0.717936462643268,0,
0.0945736434108527,0.710262995196651,0,
0.0868217054263565,0.70564987872735,0,
0.0806201550387596,0.699505397821848,0,
0.0775193798449612,0.694899415037808,0,
0.0744186046511627,0.68875968992248,0,
0.0651162790697674,0.67647548390165,0,
0.0604651162790697,0.670333380891235,0,
0.0573643410852713,0.664193655775907,0,
0.041860465116279,0.645764968849574,0,
0.0403100775193798,0.644228848623198,0,
0.0387596899224806,0.639625243734246,0,
0.0325581395348837,0.630413278166167,0,
0.0310077519379844,0.624275930945926,0,
0.0310077519379844,0.619674703952061,0,
0.0341085271317829,0.618145717410947,0,
0.0403100775193798,0.613554001997431,0,
0.0465116279069767,0.613563513577781,0,
0.0480620155038759,0.613565891472868,0,
0.0542635658914728,0.613575403053217,0,
0.0682170542635658,0.610529319446426,0,
0.0713178294573643,0.609000332905312,0,
0.0821705426356589,0.607483235839634,0,
0.0914728682170542,0.607497503210158,0,
0.100775193798449,0.60904551291197,0,
0.113178294573643,0.610598278403956,0,
0.128682170542635,0.612155799686117,0,
0.134883720930232,0.612165311266466,0,
0.145736434108527,0.612181956532077,0,
0.155038759689922,0.613729966233889,0,
0.15813953488372,0.613734722024064,0,
0.175193798449612,0.613760878870024,0,
0.182945736434108,0.61377276834546,0,
0.184496124031007,0.613775146240548,0,
0.201550387596899,0.616868787749084,0,
0.204651162790697,0.616873543539259,0,
0.207751937984496,0.606142103010415,0,
0.209302325581395,0.603076996242925,0,
0.213953488372093,0.601550387596899,0,
0.213953488372093,0.601550387596899,0,
0.226356589147286,0.592366956769867,0,
0.23875968992248,0.583183525942835,0,
0.244961240310077,0.583193037523184,0,
0.248062015503876,0.580130308650782,0,
0.288372093023255,0.555652256622437,0,
0.296124031007752,0.555664146097874,0,
0.302325581395348,0.560274884672088,0,
0.316279069767441,0.577167451372045,0,
0.322480620155038,0.594048128596566,0,
0.327131782945736,0.610926427925999,0,
0.334883720930232,0.630876967708184,0,
0.337984496124031,0.641617919817377,0,
0.337984496124031,0.649286631473819,0,
0.334883720930232,0.661551814333951,0,
0.328682170542635,0.667677272078755,0,
0.320930232558139,0.675334094259761,0,
0.310077519379844,0.679918675988015,0,
0.294573643410852,0.681428639368431,0,
0.282170542635658,0.682943358539021,0,
0.271317829457364,0.687527940267275,0,
0.257364341085271,0.690574023874066,0,
0.244961240310077,0.696689970038522,0,
0.23875968992248,0.698214200789461,0,
0.23875968992248,0.699747943120749,0,
0.229457364341085,0.701267418081514,0,
0.220155038759689,0.705854377704855,0,
0.210852713178294,0.710441337328197,0,
0.204651162790697,0.719634279735578,0,
0.201550387596899,0.727298235601845,0,
0.201550387596899,0.733433204926998,0,
0.2015503875968992, 0.748770628239882,0,
0.21395348837209302, 0.7365197127502735,0,
0.2201550387596899, 0.7365292243306225,0,
0.2294573643410853, 0.7304085223759929,0,
0.23875968992248064, 0.7273553050839398,0



    };

    float spot3[] = {
        0.493023255813953,0.597377181718742,0,
0.424806201550387,0.623346173966804,0,
0.368992248062015,0.563444618823417,0,
0.386046511627907,0.540464640700052,0,
0.417054263565891,0.51903980596376,0,
0.434108527131782,0.489924858515242,0,
0.449612403100775,0.473077471821943,0,
0.465116279069767,0.466966281447662,0,
0.496124031007751,0.460878870024254,0,
0.51937984496124,0.460914538450563,0,
0.548837209302325,0.467094687782375,0,
0.572093023255813,0.493203975840585,0,
0.57984496124031,0.5223569696105,0,
0.57984496124031,0.559166785561421,0,
0.573643410852713,0.602102059257145,0,
0.568992248062015,0.615898606553478,0,
0.556589147286821,0.629683264374375,0,
0.555038759689922,0.657288248442478,0,
0.534883720930232,0.690999667094687,0,
0.528682170542635,0.694057640176915,0,
0.496124031007751,0.695541446711371,0,
0.474418604651162,0.686305702192419,0,
0.462015503875969,0.675550482712702,0,
0.444961240310077,0.650984448566129,0,
0.434108527131782,0.634096637656346,0,
0.424806201550387,0.623346173966804,0,
0.412403100775193,0.614124696818376,0,
0.393798449612403,0.607961192752175,0,
0.37829457364341,0.589532505825842,0,
0.368992248062015,0.581849526798877,0,
0.364341085271317,0.566504969800732,0,
0.365891472868217,0.561906120701954,0

    };
    float shoe[] = {
0.289922480620155,0.190623959670899,0,
0.283720930232558,0.166074570789936,0,
0.341085271317829,0.1615613259143,0,
0.344186046511627,0.192240928330242,0,
0.344186046511627,0.160032339373186,0,
0.282170542635658,0.166072192894849,0,
0.291472868217054,0.190626337565986,0,
0.344186046511627,0.190707185998953,0,
0.314728682170542,0.159987159366528,0,
0.368992248062015,0.192278974651638,0,
0.424806201550387,0.189297094212203,0,
0.3984496124031,0.161649308032529,0,
0.370542635658914,0.190747610215437,0,
0.368992248062015,0.163137870357159,0,
0.432558139534883,0.158634137061872,0,
0.426356589147286,0.18929947210729,0,
0.432558139534883,0.158634137061872,0,
0.370542635658914,0.16007276358967,0,
0.787596899224806,0.203657202644219,0,
0.786046511627907,0.172979978123365,0,
0.843410852713178,0.173067960241594,0,
0.844961240310077,0.197610215437294,0,
0.843410852713178,0.171534217910305,0,
0.787596899224806,0.171448613687164,0,
0.789147286821705,0.202125838208018,0,
0.843410852713178,0.197607837542207,0,
0.815503875968992,0.171491415798735,0,
0.860465116279069,0.206836448375897,0,
0.863565891472868,0.174632615209017,0,
0.916279069767441,0.176247205973272,0,
0.917829457364341,0.200789461168973,0,
0.917829457364341,0.176249583868359,0,
0.865116279069767,0.173101250772816,0,
0.862015503875968,0.206838826270985,0,
0.914728682170542,0.200784705378798,0,
0.893023255813953,0.173144052884386,0,
0.958139534883721,0.441648832453512,0,
0.951937984496124,0.404829504922242,0,
0.976744186046511,0.443211109525847,0,
0.976744186046511,0.443211109525847,0,
0.951937984496124,0.406363247253531,0,
1.00155038759689,0.417175536215342,0,
0.951937984496124,0.409430731916107,0,
0.996899224806201,0.420235887192657,0,
1.00620155038759,0.384974080943548,0,
0.951937984496124,0.409430731916107,0,
0.981395348837209,0.380334807628287,0,
0.9984496124031,0.418704522756456,0,
0.976744186046511,0.381861416274314,0,
1.00620155038759,0.395710277262567,0,
1.00310077519379,0.363496932515337,0,
0.951937984496124, 0.4094307319161079,0,
0.9643410852713179, 0.37110619679459744,0,
1.006201550387597, 0.3757716269558188,0,
0.9643410852713179, 0.3741736814571741,0,
1.0077519379844961, 0.38497645883863596,0,
1.0015503875968994, 0.35889332762638515,0,
0.9705426356589146, 0.3849193893565416,0,
1.0015503875968994, 0.40643933989632386,0,
1.0015503875968994, 0.3619608122889618,0,
0.08992248062015502, 0.8099491130451325,0,
0.09302325581395349, 0.7808127645408285,0,
0.11007751937984496, 0.7915751177058069,0,
0.09302325581395349, 0.7808127645408285,0,
0.10852713178294572, 0.7946402244732963,0,
0.10697674418604651, 0.7639629999524421,0,
0.09147286821705426, 0.7808103866457412,0,
0.10852713178294572, 0.7915727398107196,0,
0.12713178294573643, 0.7793313359014601,0,
0.10852713178294572, 0.762431635516241,0,
0.12713178294573643, 0.7777975935701718,0,
0.10077519379844961, 0.7869596233414182,0,
0.13953488372093023, 0.8253626290008085,0,
0.13798449612403102, 0.7962191468112427,0,
0.15813953488372093, 0.8039187711038189,0,
0.13798449612403102, 0.7977528891425311,0,
0.15813953488372093, 0.8039187711038189,0,
0.1829457364341085, 0.7916868787749085,0,
0.1829457364341085, 0.7916868787749085,0,
0.15193798449612403, 0.7793693822228565,0,
0.15968992248062017, 0.8023874066676179,0,
0.13798449612403102, 0.7992866314738194,0,
0.15348837209302324, 0.8100466067437104,0,
0.15193798449612403, 0.7793693822228565,0,
0.0031007751937984496, 0.6395705521472392,0,
0.027906976744186046, 0.6610809911066724,0,
0.015503875968992248, 0.6027797593570172,0

    };

    float spot5[] = {
        0.3162790697674418, 0.6017073286726591,0,
0.23875968992248064, 0.6537356731820994,0,
0.21705426356589147, 0.624561278356399,0,
0.20620155038759688, 0.5908023018024445,0,
0.21550387596899223, 0.5555404955533363,0,
0.23410852713178296, 0.4988205640367148,0,
0.24186046511627907, 0.475826318542826,0,
0.24496124031007752, 0.4558924240262521,0,
0.2837209302325582, 0.47435677937889387,0,
0.3162790697674418, 0.4606030341941313,0,
0.35038759689922483, 0.45298663622960955,0,
0.38139534883720927, 0.4607029057877966,0,
0.4, 0.4760688638417274,0,
0.42170542635658914, 0.5021757740048509,0,
0.42015503875968996, 0.5573881200361441,0,
0.4, 0.6079707043325249,0,
0.38139534883720927, 0.6309483045608029,0,
0.3658914728682171, 0.656998145241832,0,
0.35968992248062015, 0.6692585723117896,0,
0.35038759689922483, 0.6753792742664194,0,
0.32558139534883723, 0.6799424549388882,0,
0.2945736434108527, 0.6875636086935845,0,
0.2930232558139535, 0.6875612307984973,0,
0.26201550387596906, 0.6813787035715985,0,
0.2573643410852713, 0.6660341465734532,0,
0.22480620155038758, 0.6383768488134304,0


    };

    unsigned int VBO, VAO;
    glGenVertexArrays(1, &VAO);
    glGenBuffers(1, &VBO);
    // bind the Vertex Array Object first, then bind and set vertex buffer(s), and then configure vertex attributes(s).
    glBindVertexArray(VAO);

    glBindBuffer(GL_ARRAY_BUFFER, VBO);
    glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW);

    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0);
    glEnableVertexAttribArray(0);

    glBindBuffer(GL_ARRAY_BUFFER, 0);

    glBindVertexArray(0);


    unsigned int VBO1, VAO1;
    glGenVertexArrays(1, &VAO1);
    glGenBuffers(1, &VBO1);
    glBindVertexArray(VAO1);
    glBindBuffer(GL_ARRAY_BUFFER, VBO1);
    glBufferData(GL_ARRAY_BUFFER, sizeof(spot1), spot1, GL_STATIC_DRAW);

    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0);
    glEnableVertexAttribArray(0);

   glBindBuffer(GL_ARRAY_BUFFER, 0);

    glBindVertexArray(0);

    unsigned int VBO2, VAO2;
    glGenVertexArrays(1, &VAO2);
    glGenBuffers(1, &VBO2);
    glBindVertexArray(VAO2);
    glBindBuffer(GL_ARRAY_BUFFER, VBO2);
    glBufferData(GL_ARRAY_BUFFER, sizeof(eye), eye, GL_STATIC_DRAW);

    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0);
    glEnableVertexAttribArray(0);

    glBindBuffer(GL_ARRAY_BUFFER, 0);

    glBindVertexArray(0);

    unsigned int VBO3, VAO3;
    glGenVertexArrays(1, &VAO3);
    glGenBuffers(1, &VBO3);
    glBindVertexArray(VAO3);
    glBindBuffer(GL_ARRAY_BUFFER, VBO3);
    glBufferData(GL_ARRAY_BUFFER, sizeof(spot2), spot2, GL_STATIC_DRAW);

    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0);
    glEnableVertexAttribArray(0);

    
    glBindBuffer(GL_ARRAY_BUFFER, 0);
    glBindVertexArray(0);

    unsigned int VBO4, VAO4;
    glGenVertexArrays(1, &VAO4);
    glGenBuffers(1, &VBO4);
    glBindVertexArray(VAO4);
    glBindBuffer(GL_ARRAY_BUFFER, VBO4);
    glBufferData(GL_ARRAY_BUFFER, sizeof(spot3), spot3, GL_STATIC_DRAW);

    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0);
    glEnableVertexAttribArray(0);


    glBindBuffer(GL_ARRAY_BUFFER, 0);
    glBindVertexArray(0);
    unsigned int VBO5, VAO5;
    glGenVertexArrays(1, &VAO5);
    glGenBuffers(1, &VBO5);
    glBindVertexArray(VAO5);
    glBindBuffer(GL_ARRAY_BUFFER, VBO5);
    glBufferData(GL_ARRAY_BUFFER, sizeof(shoe), shoe, GL_STATIC_DRAW);

    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0);
    glEnableVertexAttribArray(0);


    glBindBuffer(GL_ARRAY_BUFFER, 0);
    glBindVertexArray(0);
    unsigned int VBO6, VAO6;
    glGenVertexArrays(1, &VAO6);
    glGenBuffers(1, &VBO6);
    glBindVertexArray(VAO6);
    glBindBuffer(GL_ARRAY_BUFFER, VBO6);
    glBufferData(GL_ARRAY_BUFFER, sizeof(spot5), spot5, GL_STATIC_DRAW);

    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0);
    glEnableVertexAttribArray(0);


    glBindBuffer(GL_ARRAY_BUFFER, 0);
    glBindVertexArray(0);


    // render loop
    // -----------
    while (!glfwWindowShouldClose(window))
    {
        // input
        // -----
        processInput(window);

        // render
        // ------
        glClearColor(1.0f, 1.0f, 1.0f, 1.0f);
        glClear(GL_COLOR_BUFFER_BIT);
        glm::mat4 translationMatrix;
        glm::mat4 rotationMatrix;
        glm::mat4 scaleMatrix;
        glm::mat4 modelMatrix;
        glm::mat4 identityMatrix = glm::mat4(1.0f);
        translationMatrix = glm::translate(identityMatrix, glm::vec3(translate_X, translate_Y, 0.0f));
        rotationMatrix = glm::rotate(identityMatrix, glm::radians(rotateAngle), glm::vec3(0.0f, 0.0f, 1.0f));
        scaleMatrix = glm::scale(identityMatrix, glm::vec3(scale_X, scale_Y, 1.0f));
        modelMatrix = translationMatrix * rotationMatrix * scaleMatrix;

        glUseProgram(shaderProgram1);
        unsigned int transformLoc = glGetUniformLocation(shaderProgram1, "transform");
        glUniformMatrix4fv(transformLoc, 1, GL_FALSE, glm::value_ptr(modelMatrix));
        glBindVertexArray(VAO3);
        glDrawArrays(GL_TRIANGLE_FAN, 0, 91);
        glBindVertexArray(0);
        glBindVertexArray(VAO1);
        glDrawArrays(GL_TRIANGLE_FAN, 0, 32);
        glBindVertexArray(0);
        glBindVertexArray(VAO4);
        glDrawArrays(GL_TRIANGLE_FAN, 0, 32);
        glBindVertexArray(0);
        glBindVertexArray(VAO6);
        glDrawArrays(GL_TRIANGLE_FAN, 0, 26);
        glBindVertexArray(0);

        // get matrix's uniform location and set matrix
        glUseProgram(shaderProgram);
        unsigned int transformLoc1 = glGetUniformLocation(shaderProgram, "transform");
        glUniformMatrix4fv(transformLoc1, 1, GL_FALSE, glm::value_ptr(modelMatrix));
        // draw our first triangle
        glBindVertexArray(VAO); // seeing as we only have a single VAO there's no need to bind it every time, but we'll do so to keep things a bit more organized
        //glDrawArrays(GL_LINES, 0, 6);
        //glDrawArrays(GL_LINE_STRIP, 0, 6);
        //glDrawArrays(GL_LINE_LOOP, 0, 6);
        //glDrawArrays(GL_TRIANGLES, 0, 6);
        //glDrawArrays(GL_TRIANGLE_STRIP, 0, 6);
        //glDrawArrays(GL_TRIANGLE_FAN, 0, 6);
        //glPointSize(3.0f);
        glDrawArrays(GL_LINE_STRIP, 0, 785);
        glBindVertexArray(0);
        glBindVertexArray(VAO2);
        glDrawArrays(GL_TRIANGLE_FAN, 0, 14);
        glBindVertexArray(0);
        glBindVertexArray(VAO5);
        glDrawArrays(GL_TRIANGLES, 0, 87);
        glBindVertexArray(0);



        // glfw: swap buffers and poll IO events (keys pressed/released, mouse moved etc.)
        // -------------------------------------------------------------------------------
        glfwSwapBuffers(window);
        glfwPollEvents();
    }

    // optional: de-allocate all resources once they've outlived their purpose:
    // ------------------------------------------------------------------------
    glDeleteVertexArrays(1, &VAO);
    glDeleteBuffers(1, &VBO);
    glDeleteProgram(shaderProgram);
    glDeleteProgram(shaderProgram1);
    glDeleteVertexArrays(1, &VAO1);
    glDeleteBuffers(1, &VBO1);

    // glfw: terminate, clearing all previously allocated GLFW resources.
    // ------------------------------------------------------------------
    glfwTerminate();
    return 0;
}

// process all input: query GLFW whether relevant keys are pressed/released this frame and react accordingly
// ---------------------------------------------------------------------------------------------------------
void processInput(GLFWwindow* window)
{
    if (glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS)
        glfwSetWindowShouldClose(window, true);
    if (glfwGetKey(window, GLFW_KEY_R) == GLFW_PRESS)
    {
        rotateAngle += 1;
    }
    if (glfwGetKey(window, GLFW_KEY_T) == GLFW_PRESS)
    {
        rotateAngle -= 1;
    }
    if (glfwGetKey(window, GLFW_KEY_W) == GLFW_PRESS)
    {
        translate_Y += 0.01;
    }
    if (glfwGetKey(window, GLFW_KEY_S) == GLFW_PRESS)
    {
        translate_Y -= 0.01;
    }
    if (glfwGetKey(window, GLFW_KEY_D) == GLFW_PRESS)
    {
        translate_X += 0.01;
    }
    if (glfwGetKey(window, GLFW_KEY_A) == GLFW_PRESS)
    {
        translate_X -= 0.01;
    }
    if (glfwGetKey(window, GLFW_KEY_X) == GLFW_PRESS)
    {
        scale_X += 0.01;
    }
    if (glfwGetKey(window, GLFW_KEY_C) == GLFW_PRESS)
    {
        scale_X -= 0.01;
    }
    if (glfwGetKey(window, GLFW_KEY_Y) == GLFW_PRESS)
    {
        scale_Y += 0.01;
    }
    if (glfwGetKey(window, GLFW_KEY_U) == GLFW_PRESS)
    {
        scale_Y -= 0.01;
    }
}

// glfw: whenever the window size changed (by OS or user resize) this callback function executes
// ---------------------------------------------------------------------------------------------
void framebuffer_size_callback(GLFWwindow* window, int width, int height)
{
    // make sure the viewport matches the new window dimensions; note that width and
    // height will be significantly larger than specified on retina displays.
    glViewport(0, 0, width, height);
}